* monad

  - 當需要實用複雜的控制結構時
    需要的可能是維護額外的 env
    這時就需要 monad 了

* type-class

  - 當用 <type> 來定義類型時 都會有基本的 equal?
    這就是 <type> 的接口函數

  - 其他的 type-class 都是 <type> 的 subtype
    定義 : t1 < t2
    如果 t1 的接口函數比 t2 多

  - 重新實現 equal? 對於 quotype 來說是必須的

  - 重新實現 equal? 對 unification 有什麼影響 ?
    當前的 unification 與基本的 <type> 的 equal? 有什麼關係
    嘗試 明確 esse 的類型檢查語義中的 unification 部分
    然後來回答這個問題
