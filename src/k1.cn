(+union nat-u
  zero-t
  succ-t)

(+data zero-t)

(+data succ-t .prev)

;; (+fun add : (-> m : nat-u n : nat-u -- nat-u)
;;   (case n
;;     (zero-t m)
;;     (succ-t m n.prev recur succ-c)))

(+gene add : (-> m : nat-u n : nat-u -- nat-u))

(+disp add : (-> m : nat-u n : zero-t -- nat-u)
  m)

(+disp add : (-> m : nat-u n : succ-t -- nat-u)
  m n.prev recur succ-c)

(main
 zero-c succ-c succ-c succ-c
 zero-c succ-c succ-c succ-c add)
