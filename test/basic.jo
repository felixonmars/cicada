(run testing-flag/on)

(run (int 1 2 3) dot dot dot)

(def square
  (jojo (note int int -> int)
    dup mul end))

(test (int 11) square dot)

(test top-repl/printing-flag/on)

(test (if true then true dot end)
      (if false then false dot end))

(def factorial
  (jojo (note int -> int)
    (if dup (int 1) lteq? then drop (int 1) end)
    dup (int 1) sub (recur) mul end))

(test (int 0) factorial dot
      (int 1) factorial dot
      (int 2) factorial dot
      (int 3) factorial dot
      (int 4) factorial dot)

(test (int 18 5) mod dot)
(test (int 0 3 2) (int 1 3 2) (int 3) n-eq? dot)
(test (int 1 3 2) (int 1 3 2) (int 3) n-eq? dot)

(test (string "test1" "test2")
      string/print string/print)

(test (string "test1" "test2")
      dup (int 66) swap set-byte string/print
      dup get-byte dot string/print)

(test current-dir string/print newline)

(test (string "HOME") var-string->env-string
      string/print newline)

(test (string "PATH") var-string->env-string
      string/print newline)

(def command-line/print-argument/loop
  (jojo (note index -> [io])
    (if dup argument-counter lt? then
        dup index->argument-string string/print
        newline
        (int 1) add
        (loop))
    drop end))

(def command-line/print-argument
  (jojo (note -> [io])
    (int 0) command-line/print-argument/loop))

(test command-line/print-argument)

(test (string "../README") file/size dot)

(test (string "../README")
      dup file/size
      allocate tuck file/copy-to-buffer
      drop
      string/print
      newline)

(def var1 (int 666) (int 666) add (jo <var>))
(test var1 dot)

(test (jo null) jo->string string/print newline)

(note (test def/report))

(run
  (int 1 2 3) (>> a b c)
  (<< a) dot
  (<< b) dot
  (<< c) dot)

(def local-test/0
  (jojo (note)
    (int 1 2 3) (>> a b c)
    (<< a) dot
    (<< b) dot
    (<< c) dot))

(def local-test
  (jojo (note)
    (int 1 2 3) (>> a b c)
    (<< a) dot local-test/0 newline
    (<< b) dot local-test/0 newline
    (<< c) dot local-test/0 newline))

(run local-test)

(run (hex A 0A) dot dot)

(run bye)
